name: Build Status

env: 
  PYTHON: "" 
      
defaults:
  run:
    shell: bash
    working-directory: .

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]  # TODO: macos-latest
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.5.1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - run: |
          git clone --depth 1 https://github.com/CliMA/ClimateMachine.jl.git

      - run: |
          cd ClimateMachine.jl
          julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'
          julia --project -e 'using Pkg; Pkg.precompile()'
          julia --project -e 'using Pkg; Pkg.status()'
          julia --color=yes --project test/Atmos/Parameterizations/Microphysics/KM_saturation_adjustment.jl

      - run: |
          git clone --depth 1 https://github.com/atmos-cloud-sim-uj/PySDM.git
          julia -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/JuliaPy/Conda.jl"))'
          julia -e 'using Conda; Conda.pip_interop(true); Conda.pip("install -r", "PySDM/requirements.txt")'

      - run: |
          cd PySDM
          julia -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/JuliaPy/PyCall.jl"))'
          julia -e 'using PyCall; pushfirst!(PyVector(pyimport("sys")."path"), ""); example = pyimport("PySDM_examples.Arabas_et_al_2015_Figs_8_9.example"); example.main()'
